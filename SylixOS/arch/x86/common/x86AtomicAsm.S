;/*********************************************************************************************************
;**
;**                                    中国软件开源组织
;**
;**                                   嵌入式实时操作系统
;**
;**                                       SylixOS(TM)
;**
;**                               Copyright  All Rights Reserved
;**
;**--------------文件信息--------------------------------------------------------------------------------
;**
;** 文   件   名: x86AtomicAsm.S
;**
;** 创   建   人: Jiao.JinXing (焦进星)
;**
;** 文件创建日期: 2018 年 07 月 30 日
;**
;** 描        述: x86 体系构架处理器原子量操作.
;*********************************************************************************************************/

#ifndef ASSEMBLY
#define ASSEMBLY 1
#endif

#include <arch/assembler.h>

    EXPORT_LABEL(archAtomicAdd)
    EXPORT_LABEL(archAtomicSub)
    EXPORT_LABEL(archAtomicAnd)
    EXPORT_LABEL(archAtomicOr)
    EXPORT_LABEL(archAtomicXor)

;/*********************************************************************************************************
;  原子量加
;*********************************************************************************************************/

FUNC_DEF(archAtomicAdd)
    MOVL        X86_SP_ARG1(%ESP) , %EAX                                ;/*  值                          */
    MOVL        X86_SP_ARG2(%ESP) , %EDX                                ;/*  地址                        */
    MOVL        %EAX , %ECX
    LOCK
    XADDL       %EAX , (%EDX)
    ADDL        %ECX , %EAX
    RET
    FUNC_END(archAtomicAdd)

;/*********************************************************************************************************
;  原子量减
;*********************************************************************************************************/

FUNC_DEF(archAtomicSub)
    MOVL        X86_SP_ARG1(%ESP) , %EAX                                ;/*  值                          */
    MOVL        X86_SP_ARG2(%ESP) , %EDX                                ;/*  地址                        */
    NEGL        %EAX
    MOVL        %EAX , %ECX
    LOCK
    XADDL       %EAX , (%EDX)
    ADDL        %ECX , %EAX
    RET
    FUNC_END(archAtomicSub)

;/*********************************************************************************************************
;  原子量与
;*********************************************************************************************************/

FUNC_DEF(archAtomicAnd)
    MOVL        X86_SP_ARG2(%ESP) , %EDX                                ;/*  地址                        */
    MOVL        (%EDX), %EAX                                            ;/*  旧值                        */
LINE_LABEL(1)
    MOVL        X86_SP_ARG1(%ESP) , %ECX                                ;/*  值                          */
    ANDL        %EAX , %ECX
    LOCK
    CMPXCHGL    %ECX, (%EDX)
    JNZ         1b
    MOVL        %ECX , %EAX
    RET
    FUNC_END(archAtomicAnd)

;/*********************************************************************************************************
;  原子量或
;*********************************************************************************************************/

FUNC_DEF(archAtomicOr)
    MOVL        X86_SP_ARG2(%ESP) , %EDX                                ;/*  地址                        */
    MOVL        (%EDX), %EAX                                            ;/*  旧值                        */
LINE_LABEL(1)
    MOVL        X86_SP_ARG1(%ESP) , %ECX                                ;/*  值                          */
    ORL         %EAX , %ECX
    LOCK
    CMPXCHGL    %ECX, (%EDX)
    JNZ         1b
    MOVL        %ECX , %EAX
    RET
    FUNC_END(archAtomicOr)

;/*********************************************************************************************************
;  原子量异或
;*********************************************************************************************************/

FUNC_DEF(archAtomicXor)
    MOVL        X86_SP_ARG2(%ESP) , %EDX                                ;/*  地址                        */
    MOVL        (%EDX), %EAX                                            ;/*  旧值                        */
LINE_LABEL(1)
    MOVL        X86_SP_ARG1(%ESP) , %ECX                                ;/*  值                          */
    XORL        %EAX , %ECX
    LOCK
    CMPXCHGL    %ECX, (%EDX)
    JNZ         1b
    MOVL        %ECX , %EAX
    RET
    FUNC_END(archAtomicXor)

;/*********************************************************************************************************
;  END
;*********************************************************************************************************/
